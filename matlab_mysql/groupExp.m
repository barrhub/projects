function groupExp(q,maxtrials,approxthresh)    % must enter initials    if ~nargin,        return    end        c = struct(); % constants    p = struct(); % procedural parameters    f = struct(); % file parameters    c.name = ['subj' q.subj '_' q.expN];     % defaults    if ~exist('maxtrials','var'), maxtrials = 100; end  % must be divible by 8           if ~exist('approxthresh','var'), approxthresh = 0.00075; end    if ~exist('q'), q.expN = 'exp1'; q.subj = '1'; q.nSubj = 1; end                    % testing/demo mode?    %if strcmp(c.name,'test'), maxtrials = 16; end    useDB;    % get the seed from the database    seed = mysql('SELECT seed FROM seeds ORDER BY time DESC LIMIT 1');    randn('state',seed);    rand('state',seed);        % make file names    numC = num2str(str2num(q.subj)-1);    basefilename = ['/Users/subject' numC '/Documents/MATLAB/exp/data/' c.name];    f.matfilename = [basefilename,'.mat'];    filename = [basefilename,'.dat'];    classfilename = [basefilename,'CLASS.mat'];        % get the calibration data    [cal1,c.calfile,c.calfolder] = getddf256(['calibration' q.subj '.ddf'],'~/Desktop/');        % check for the passed screen; if not there, use the highest one    p.mainscr = max(Screen('Screens'));    %Screen('Preference', 'SkipSyncTests', 1);        % generate stimuli    images = cell(5,1);    images{1} = zeros(512);    images{2} = mkgausbump(0,0); % top left    images{3} = mkgausbump(1,0); % bottom left    images{4} = mkgausbump(0,1); % top right    images{5} = mkgausbump(1,1); % bottom right        % these constant vars will be saved    c.screensz = [38.25 28.5];    c.framert = FrameRate(p.mainscr);    c.noiselevel = 0.0625;     c.clipsd = 2;    c.clockseed = seed;    c.approxthresh = approxthresh;    c.maxthresh = findmaxcon(images,cal1,c.noiselevel,c.clipsd); % same as maxcon    c.minthresh = 1e-7;    c.numstimlevels = 25;    c.stimframes = round(c.framert/2);  % about 500 ms                                         %c.numconditions = 5;    c.nSubj = q.nSubj;    % these procedural vars    p.maxtrials = maxtrials;    p.darktime = 120;     p.numblocks = 1;    p.gam = 0.5;  % this never gets used    pc = '71%';  % percent correct threshold for staircases and for                 % later analysis    p.pc = 71;    p.pflag = 1;    if p.pflag == 1        c.mode = 'partial';    else        c.mode = 'full';    end    p.svnoise = 0;        p.feedback = 1;    q.nominee = RandSample(1:q.nSubj,[maxtrials p.numblocks]);    if p.svnoise, noiseI = cell(p.maxtrials,p.numblocks); end        % these variable will not be saved    clut = mkclut256; % is this right?    pauseduration = 0.5;    msgcolor = 190;    boxwidth = 1;    boxcon = -0.4;    skipbreaks = 0;    skipadapt = 1;    [sX,sY] = size(images{1});    seeds = zeros(maxtrials,p.numblocks,2);        % the values below should not be changed if the experiment is to be repeated.    stimlevels = logspace(log10(c.minthresh),log10(c.maxthresh),c.numstimlevels);        % make sounds    introsnd=makesnd(150,.2,.95);    corrsnd=makesnd(600,.09,.65);    wrongsnd=makesnd(200,.09,.8);        % open the screens    ListenChar(2);  % this tells matlab to use keypresses with GetChar; '2' also suppresses command window garbage    [scr,scrrect]=Screen('OpenWindow',p.mainscr,0);%,[0 0 800 600]);    oldclut = Screen('LoadCLUT',scr,clut,0);    Screen('FillRect',scr,cal1.pave);    monitorFlipInterval=Screen('GetFlipInterval', scr); % duration of screen flip    settext(scr,'Arial',26,1);    %%[oldfont,oldsz,oldstyle] = settext(scr,'Arial',26,1);        if ~skipadapt,        centertext(scr,scrrect,'Pause For Adaptation',scrrect(end)-50,1);    else        centertext(scr,scrrect,'Just a moment...',scrrect(end)-50,1);    end           vbl = Screen('Flip',scr); % collect timing of first screen flip    priorityLevel=MaxPriority(scr);    c.res = scrrect(3:4);    tic;        % hide the cursor;    HideCursor;        % the bounding box    xC = scrrect(3)/2;    yC = scrrect(4)/2;    boxrect = [xC-sX/2-1, yC-sY/2-1, xC+sX/2+1, yC+sY/2+1];    boxcolor = makeimage256(boxcon,cal1);    bndx = [boxrect(1),boxrect(2),xC,yC; xC,boxrect(2),boxrect(3),yC; boxrect(1),yC,xC,boxrect(4); xC,yC,boxrect(3),boxrect(4)];    % initialize    %sequence = RandSample(1,[34,maxtrials]);    sequence = zeros(maxtrials,p.numblocks);        % local sequence -- this gets changed    sequenceL = makeSequence(sequence,q,p.pflag);    % global sequence remains unchanged    sequenceG = sequenceL;    conlevel = zeros(size(sequenceL));    id = zeros(size(sequenceL));        % for the responses    responses = zeros([maxtrials,p.numblocks]);    correct = responses;    grp_resp = responses;    totaltrials = maxtrials*p.numblocks;    pausetrials = round(totaltrials/4);    counter = 1;        % open the data file and write the header    if ~exist(filename,'file')                % names        f.fwid = fopen(filename,'a+');			        savecomment(f.fwid,['Data File Name: ',filename]);        savecomment(f.fwid,'group detection experiment');        savecommand(f.fwid,'usenewcliprandn = 1;');        savecmd(c,'c',f.fwid);        savecmd(p,'p',f.fwid);                savecommand(f.fwid,['trial = 1; target_flag = 2; grp_resp = 3; ind_resp = 4;'...                             'grp_correct = 5; global_sequence = 6; group_decider = 7;' ...                             'stimlevel = 8; rt = 9; randnstate1 = 10; randnstate2 = 11;']);                savedatetime(f.fwid); % date and time        newfile = 1;        % new file flag    else        f.fwid = fopen(filename,'a+');        savedatetime(f.fwid);    end        % continue dark adptation    if ~skipadapt,        done=toc;        togo=p.darktime-done;        passed=0;        start=GetSecs;        hit='9';        FlushEvents('keyDown');        while GetSecs-start < togo & abs(hit)~=48  	% zero key skips adaptation            if CharAvail                hit=GetChar;            end        end    end        % key press to continue    Screen('FillRect',scr,cal1.pave);    FlushEvents('keyDown');    centertext(scr,scrrect,'Press any key to begin',scrrect(end)-50,1);    Screen('FrameRect',scr,boxcolor,boxrect,boxwidth);    vbl = Screen('Flip',scr);    GetChar;  % seems to work but probably should KbWait?    subjN = str2num(q.subj);    % outer loop: blocks    pndx = 1;        % main loop: trials within blocks    for trial = 1:maxtrials        if trial == 1            trialsrc = mkudtr(stimlevels,pc,1,approxthresh);    % staircase        end        % get the next stimulus level        [trialsrc,conlevel(trial),id(trial)] = gettrial(trialsrc);                seeds(trial,:) = randn('state');                targ = makeimage256(setrmssquaredcon(images{sequenceG(trial)},conlevel(trial)),cal1);                % in the divided case, only show the target when your number is picked        if p.pflag(pndx) && sequenceL(trial)-1 ~= str2num(q.subj)            sequenceL(trial) = 1;        end        %sequenceL(trial,block)        nz = cliprandn([sX,sY],c.clipsd,c.noiselevel,0);      % make noise        nz = makeNz(p.pflag(pndx),q.subj,c);                currimage = setrmssquaredcon(images{sequenceL(trial)},conlevel(trial)); % make images        %%targ = makeimage256(currimage,cal1);        cimage = makeimage256(nz+currimage,cal1);     % make pixel image                Screen('FrameRect',scr,boxcolor,boxrect,boxwidth);        Screen('PutImage',scr,cimage);        vbl = Screen('Flip',scr);   % paint stimulus on screen immediately                 Screen('FrameRect',scr,boxcolor,boxrect,boxwidth)  ;        centertext(scr,scrrect,'1 = PRESENT              2 = ABSENT',round(scrrect(end)*.85),1);                % clear screen after stimframes has elapsed         vbl = Screen('Flip',scr,vbl+(c.stimframes*monitorFlipInterval)-monitorFlipInterval/2);                % wait for response        [resp,rt] = getResp(f,q,p,c);        responses(trial) = str2num(resp);                % database stuff        r = num2str(responses(trial));        t_str = num2str(counter);                mysql(['INSERT INTO ' q.expN ' VALUES(' q.subj ',' t_str ',' r ',NULL,NULL)']);        centertext(scr,scrrect,'Waiting for other responses...',scrrect(end)-50,1);        Screen('Flip',scr);        r1 = waitR1(q,t_str);        r2 = discuss(q,trial,scr,scrrect,counter)                Screen('Flip',scr);        if length(r2) > 0            grp_resp(trial) = r2;        else             grp_resp(trial) = 0;            disp('no r2');        end        correct(trial) = isCorrect(sequenceG(trial),grp_resp(trial));                if p.feedback              str1 = 'The target was ';            str2 = ['Subject ' num2str(q.nominee(trial)) ' responded '];            if sequenceG(trial) > 1                str1 = [str1 'PRESENT.'];            else                str1 = [str1 'ABSENT.'];            end            if grp_resp(trial) == 1                str2 = [str2 'PRESENT for the group.'];            else                str2 = [str2 'ABSENT for the group.'];            end            fback = sprintf('%s\n\n', str1, ...                             str2);            DrawFormattedText(scr,fback,'center','center');            Screen('Flip',scr);            pause(3);            if sequenceG(trial) > 1                Screen('PutImage',scr,targ);                Screen('FrameRect',scr,boxcolor,boxrect,boxwidth);                Screen('FrameRect',scr,boxcolor,bndx(sequenceG(trial)-1,:),boxwidth);                centertext(scr,scrrect,'Target location:',scrrect(1)+50,1);                Screen('Flip',scr);                pause(2.5);            end        end        trialsrc = telltrial(trialsrc,conlevel(trial,block),correct(trial,block));                % save the data        data=[counter,sequenceL(trial,block),grp_resp(trial,block),responses(trial,block),correct(trial,block),sequenceG(trial,block),q.nominee(trial,block),conlevel(trial,block),rt];        fprintf(f.fwid,'%g\t',data);         fprintf(f.fwid,'%.0f\t',(seeds(trial,:)));        fprintf(f.fwid,'\n');                if trial == maxtrials            centertext(scr,scrrect,'Thank you for participating!');            Screen('Flip',scr);            pause(3);            break;        end                % increment counter        counter = counter+1;        showFix(scr,xC,yC);        pause(1.5);      endend% close the screen.sound(introsnd);Screen('CloseAll');fclose(f.fwid); % close the fileListenChar(0); % turn off command window key suppressionsave(f.matfilename,'p','c');  % save .mat fileendfunction savecmd(x,s,fwid)    cstr = str2cellstr(Var2Str(x,s));    for i = 1:length(cstr)        savecommand(fwid,cstr{i});    endend%% MYSQL functionsfunction l = waitR1(q,t_str)    l=0;    while(length(l(l>0)) ~= q.nSubj)        l = mysql(['SELECT r1 FROM ' q.expN ' WHERE trial = ' t_str]);        pause(.05);    endendfunction r2 = getR2(expN,trial,nSubj)    r2 = 0;    while(length(r2(r2>0)) ~= nSubj)        r2 = mysql(['SELECT r2 FROM ' expN ' WHERE trial = ' trial ' AND r2 ' ...                    'IS NOT UNKNOWN']);        pause(.05);    endendfunction useDB()    %mysql('use',exp); % specify the database    %mysql('open');    mysql('open','estes.local','user','obscure')%    mysql('open','estes.local')    mysql('use','test'); % specify the database    end